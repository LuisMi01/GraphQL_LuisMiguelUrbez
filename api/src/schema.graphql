
type Autor {
  escritoPorLibros: [Libro]
  nombre: String!
}

type Bibliotecario {
  categoriaBibliotecario: String!
  direccion: String!
  email: String!
  nombre: String!
  tarjetaBibliotecaro: Int!
  telefono: Int!
  trabajaEnCategorias: [Categoria!]!

}

type Categoria {
  bibliotecariosTrabajaEn: [Bibliotecario!]!
 
  librosPerteneceA: [Libro!]!
  nombre: String!
  usuariosTieneGusto: [Usuario!]!

}

type Libro {
  autor: String!
  autorsEscritoPor: [Autor!]!
  cantidad: Int!
  categoria: String!
  disponible: String!
  iban: String!
  perteneceACategorias: [Categoria!]!
  
  titulo: String!
}

type Usuario {
  direccion: String!
  email: String!
  gusto1: String!
  gusto2: String!
  gusto3: String!
  nombre: String!
  tarjetaUsuario: Int!
  telefono: Int!
  tieneGustoCategorias: [Categoria!]!
  rol: String! # nuevo campo para el rol del usuario
  contrasena: String! # nuevo campo para la contraseña del usuario
}

type Query {
  libro(titulo: String!): Libro
  libros: [Libro]
  librosPorCategoria(nombre: String!): [Libro]
  autores: [Autor]
}

type Mutation {
  registrarUsuario(nombre: String!, email: String!, contrasena: String!, rol: String!): Usuario!
  iniciarSesion(email: String!, contrasena: String!): String! # Esto podría devolver un token de autenticación
}